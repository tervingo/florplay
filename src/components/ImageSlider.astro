---
import '../styles/slider.css';

interface Props {
  images: string[];
  width?: string;
  height?: string;
  sliderId?: string; // Nuevo prop para el ID único
}

const { 
  images, 
  width = "350px", 
  height = "500px",
  sliderId = crypto.randomUUID() // Generamos un ID único si no se proporciona uno
} = Astro.props;
---

<div class="slider-container">
  <div 
    class="slider"
    data-images={JSON.stringify(images)}
    data-slider-id={sliderId}>
    <img 
      src={images[0]} 
      alt="Slider image"
      class="slider-image"
      style={`width: ${width}; height: ${height};`}
    />
  </div>
</div>

<script>
  function initializeSlider(sliderId: string) {
    const slider = document.querySelector(`[data-slider-id="${sliderId}"]`);
    if (!slider) return;

    const images = JSON.parse(slider.getAttribute('data-images') || '[]');
    let currentImage = 0;
    const imgElement = slider.querySelector('img');

    if (!imgElement) return;

    setInterval(() => {
      currentImage = (currentImage + 1) % images.length;
      imgElement.style.opacity = '0';
      
      setTimeout(() => {
        imgElement.src = images[currentImage];
        imgElement.style.opacity = '1';
      }, 500);
    }, 4000);
  }

  // Inicializar todos los sliders cuando el documento esté listo
  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('[data-slider-id]').forEach(slider => {
      initializeSlider(slider.getAttribute('data-slider-id') || '');
    });
  });
</script>